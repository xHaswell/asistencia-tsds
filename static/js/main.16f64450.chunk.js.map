{"version":3,"sources":["components/GraficaScreen.js","AsistenciaApp.js","index.js"],"names":["GraficaScreen","useState","labelsGrafica","dataGrafica","state","setState","colors","i","length","color","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","getAsistencias","a","fetch","resp","json","map","noControl","porcentajeFaltas","useEffect","className","options","scales","yAxes","ticks","beginAtZero","AsistenciaApp","ReactDOM","render","document","getElementById"],"mappings":"mOAGaA,EAAgB,WAO3B,IAPkC,IAAD,EACPC,mBAAS,CACjCC,cAAe,GACfC,YAAa,KAHkB,mBAC1BC,EAD0B,KACnBC,EADmB,KAM7BC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAMD,YAAYK,OAAQD,IAAK,CACjD,IAAIE,OAAK,EACLL,EAAMD,YAAYI,IAAM,GAAKH,EAAMD,YAAYI,IAAM,GACvDE,EAAQ,QACDL,EAAMD,YAAYI,IAAM,GAAIE,EAAQ,UAE3CA,EAAQ,MACRL,EAAMD,YAAYI,GAAK,KAEzBD,EAAOC,GAAKE,EAGd,IAAMC,EAAO,CACXC,OAAQP,EAAMF,cACdU,SAAU,CACR,CACEC,MAAO,uBACPH,KAAMN,EAAMD,YACZW,gBAAiBR,EACjBS,YAAa,UACbC,YAAa,KAiBbC,EAAc,uCAAG,gCAAAC,EAAA,4DAEnB,6EAFmB,SAGFC,MADjB,8EAFmB,cAGfC,EAHe,gBAIEA,EAAKC,OAJP,gBAIbX,EAJa,EAIbA,KACRL,EAAS,CACPH,cAAeQ,EAAKY,KAAI,SAACJ,GAAD,OAAOA,EAAEK,aACjCpB,YAAaO,EAAKY,KAAI,SAACJ,GAAD,OAAOA,EAAEM,sBAPZ,2CAAH,qDAepB,OAJAC,qBAAU,WACRR,MACC,IAGD,qCACE,qBAAKS,UAAU,SAAf,SACE,oBAAIA,UAAU,QAAd,gCAEF,cAAC,IAAD,CAAehB,KAAMA,EAAMiB,QAhCf,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,aCrCZC,EAAgB,WAC3B,OAAO,cAAC,EAAD,K,OCCTC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.16f64450.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { HorizontalBar } from \"@reactchartjs/react-chart.js\";\n\nexport const GraficaScreen = () => {\n  const [state, setState] = useState({\n    labelsGrafica: [],\n    dataGrafica: [],\n  });\n\n  let colors = [];\n  for (var i = 0; i < state.dataGrafica.length; i++) {\n    let color;\n    if (state.dataGrafica[i] >= 0 && state.dataGrafica[i] <= 70)\n      color = \"green\";\n    else if (state.dataGrafica[i] <= 90) color = \"yellow\";\n    else {\n      color = \"red\";\n      state.dataGrafica[i] = 100;\n    }\n    colors[i] = color;\n  }\n\n  const data = {\n    labels: state.labelsGrafica,\n    datasets: [\n      {\n        label: \"Porcentaje de Faltas\",\n        data: state.dataGrafica,\n        backgroundColor: colors,\n        borderColor: \"#6610f2\",\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  const getAsistencias = async () => {\n    const url =\n      \"https://us-central1-softwell-vm.cloudfunctions.net/api/tec/asistenciastsds\";\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    setState({\n      labelsGrafica: data.map((a) => a.noControl),\n      dataGrafica: data.map((a) => a.porcentajeFaltas),\n    });\n  };\n\n  useEffect(() => {\n    getAsistencias();\n  }, []);\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1 className=\"title\">Asistencias TSDS</h1>\n      </div>\n      <HorizontalBar data={data} options={options} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { GraficaScreen } from \"./components/GraficaScreen\";\n\nexport const AsistenciaApp = () => {\n  return <GraficaScreen />;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AsistenciaApp } from \"./AsistenciaApp\";\nimport \"./index.css\";\n\nReactDOM.render(<AsistenciaApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}